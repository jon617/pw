#!/usr/local/bin/node
// run on the command-line
// returns a report of how strong your password is
// install the npm module 'zxcvbn' by doing:
//   npm install -g zxcvbn
//
// install this script in your path, or run by typing:
//   chmod +x ./zxcvbn
//   ./zxcvbn
//
// if you get an error that module 'zxcvbn' cannot be found, try one or both of these commands:
//  npm install -g zxcvbn
//  export NODE_PATH=/usr/local/lib/node_modules

'use strict'

var zxcvbn = require('zxcvbn');

// read the password from the command line
var standard_input = process.stdin;

// set the input character encoding
standard_input.setEncoding("utf-8");

standard_input.on("data", function( data ) {
  // user input
  var strengthReport = zxcvbn(
    data.replace(
      new RegExp("\\n", "g"),
     ""
    )
  );

  // score out of 4
  console.log("");
  console.log("Strength score (0=worst, 4=best): " + strengthReport.score);
  console.log("");
  console.log("Estimated time to crack this password:");
  console.log("  Online (slow) at 100 guesses per hour      : " + strengthReport.crack_times_display.online_throttling_100_per_hour);
  console.log("  Online (fast) at 10 guesses per second     : " + strengthReport.crack_times_display.online_no_throttling_10_per_second);
  console.log("  Offline (slow) at 1,000 guesses per second : " + strengthReport.crack_times_display.offline_slow_hashing_1e4_per_second);
  console.log("  Offline (fast) at 10 billion guesses/second: " + strengthReport.crack_times_display.offline_fast_hashing_1e10_per_second);
  console.log("");
  if ( typeof strengthReport.feedback === "object" ) {
    if ( strengthReport.feedback.warning ) {
      console.log("Warning: " + strengthReport.feedback.warning);
    }
    if ( (typeof strengthReport.feedback.suggestions === "object") && (strengthReport.feedback.suggestions.length > 0) ) {
      console.log("Suggestions: ");
      strengthReport.feedback.suggestions.forEach( function(suggestion) {
        console.log("  " + suggestion);
      });
    }
  }
  process.exit();
});
